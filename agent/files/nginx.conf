user  nginx;
worker_processes  auto;

error_log  /dev/stdout error;
pid        /var/run/nginx.pid;


events {
    worker_connections  4096;
    multi_accept on;
    use epoll;
}


http {

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    access_log  off;
    error_log /dev/stdout crit;

    keepalive_timeout  100;
    keepalive_requests 60;

    sendfile on;
    tcp_nodelay on;
    tcp_nopush on;

    gzip on;
    gzip_types text/plain application/json;

    upstream south {
    server {{ hostvars['node6']['internal'] }}:{{ agent_south_port }};
    server {{ hostvars['node5']['internal'] }}:{{ agent_south_port }};
{% if agent_workers | int >= 3 %}
    server {{ hostvars['node4']['internal'] }}:{{ agent_south_port }};
{% endif %}
{% if agent_workers | int >= 4 %}
    server {{ hostvars['node3']['internal'] }}:{{ agent_south_port }};
{% endif %}
{% if agent_workers | int >= 5 %}
    server {{ hostvars['node2']['internal'] }}:{{ agent_south_port }};
{% endif %}
{% if agent_workers | int >= 6 %}
    server {{ hostvars['node1']['internal'] }}:{{ agent_south_port }};
{% endif %}

      keepalive 60;
    }

    upstream provisioning {
    server {{ hostvars['node6']['internal'] }}:{{ agent_provisioning_port }};
    server {{ hostvars['node5']['internal'] }}:{{ agent_provisioning_port }};
{% if agent_workers | int >= 3 %}
    server {{ hostvars['node4']['internal'] }}:{{ agent_provisioning_port }};
{% endif %}
{% if agent_workers | int >= 4 %}
    server {{ hostvars['node3']['internal'] }}:{{ agent_provisioning_port }};
{% endif %}
{% if agent_workers | int >= 5 %}
    server {{ hostvars['node2']['internal'] }}:{{ agent_provisioning_port }};
{% endif %}
{% if agent_workers | int >= 6 %}
    server {{ hostvars['node1']['internal'] }}:{{ agent_provisioning_port }};
{% endif %}

    keepalive 60;
    }

    server {
        listen {{ agent_south_port }} backlog=4096;

        location / {
            proxy_pass http://south;
            proxy_read_timeout 300;
        }
    }

    server {
        listen {{ agent_provisioning_port }} backlog=4096;

        location / {
            proxy_pass http://provisioning;
            proxy_redirect off;
            proxy_buffering on;
        }
    }
}
